version: '2.4'

volumes:
  rmqdata:
    external: false
  pgdata:
    external: true
      

networks:
  botnet:
    external: false

services:
  admin:
    build: 
      context: ../../bot_site
      dockerfile: Dockerfile
    expose:
      - 9000
    ports:
      - 9000:8000
    command:  bash run.sh
    networks:
      - botnet
    depends_on:
      - postgres
      - rabbit
    volumes:
      - ../../bot_site/media/:/app/media/
    restart: always

  # bot:
  #   build:
  #     context: ../../bot
  #     dockerfile: Dockerfile
  #   command: python main.py
  #   environment:
  #     TGBOT_API_TOKEN: 5783267477:AAGMGx6q2_s6-JPirrNYiYQ0UbA17l8dXXE
  #     USER_ID: 2
  #   # command: /bin/bash -c "while true; do echo 'admin alive'; sleep 240; done"
  #   networks:
  #     - botnet
  #   volumes:
  #     - ../../bot_site/media/:/media/
  #   depends_on:
  #     - admin
  #   restart: always

  rabbit:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    ports:
     - 15672:15672
     
    # restart: always
    environment:
     - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 536870912
    volumes:
      - rmqdata:/var/lib/rabbitmq
    networks:
      - botnet

  postgres: 
    image: postgres:16
    container_name: postgres_host
    hostname: postgres_host
    # restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: full_house
    networks:
      - botnet
    volumes:
      - pgdata:/var/lib/postgresql/data
    shm_size: '256mb'